
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            activate-behaviors = <
              &rgb_ug sethsv (128, 255, 64)
  	    >;

            bindings = <
 &lt 2 GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &lt 2 MINUS  &kp TAB   &kp Q   &kp W   &kp E   &kp R   &kp T   &mo 1   &mo 1   &kp Y   &kp U   &kp I   &kp O   &kp P  &kp EQUAL  &kp ESC   &kp A   &kp S   &kp D   &kp F   &kp G  &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp H   &kp J   &kp K   &kp L  &kp SEMI  &kp APOS  &kp LSHIFT   &kp Z   &kp X   &kp C   &kp V   &kp B  &lt 3 PG_UP  &kp PG_DN  &kp HOME  &lt 3 END   &kp N   &kp M  &kp COMMA  &kp PERIOD  &kp FSLH  &kp RSHIFT  &kp LEFT_GUI  &kp KP_PLUS  &kp KP_MINUS  &mt LALT KP_ASTERISK  &mt LCTRL BACKSLASH  &kp BSPC  &kp DEL  &kp ENTER  &kp SPACE  &kp RALT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
            >;
        };

        layer_SYMBOL {
            bindings = <
 &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10   &none  &trans  &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE  &trans  &trans  &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS   &none  &trans  &kp HASH  &kp DOLLAR  &kp LBRC  &kp RBRC  &kp GRAVE  &trans  &trans  &kp KP_ASTERISK  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &none  &trans  &kp PERCENT  &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE  &trans  &trans  &trans  &trans   &none  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER   &none  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_N0  &kp KP_N0  &kp KP_DOT  &kp KP_ENTER   &none
            >;
        };

        layer_NAV {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans   &none   &none     &kp   &none     &kp   &none  &trans  &trans   &none   &none   &none   &none   &none   &none   &none     &kp     &kp     &kp     &kp   &none  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &none   &none   &none   &none   &none   &none   &none   &none  &trans  &trans  &trans  &trans   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none     &kp     &kp  &trans  &trans  &trans   &none   &none   &none   &none   &none
            >;
        };

        layer_ADJUST {
            bindings = <
  &none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10   &none  &bootloader  &reset  &rgb_ug  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &trans   &none   &none  &trans   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
            >;
        };

    };
};
